
Enemy Types:

* Standard:
    C Centipede, f frog, j jackal, k kobold, o orc / ogre, s skeleton, y yeek,
    z zombie, H Hobgoblin, M Mummy, R Reptile, S Scorpion, T Troll, Y Yeti
* Heavy           : g golem, K Beetle
* Breeders        : r rodent, l giant louse, r rodent, w worm, F Fly, O Ooze
* Trappers        : e eye, m mold, J Jelly, Q Quylthulg
Sappers         : t tick, G ghost, U Umber Hulk, W Wraith, i icky thing
Skills          : p person, E Elemental, V Vampire, P Giant person
Hunters         : C Cube, L Lich, X Xorn
Fragile Blasters: b Bat, F Fly
* Fragile Brawlers: h harpy
Bosses          : d dragon, B Balrog, D Ancient Dragon
Unknown         : a Ant, q quasit, A Ant Lion

1 (Training Enemies):
    *rat, *Ant1, *ruttle, bat, snake, *giant centipede
2 (Can kill you if you are not careful):
    Ant2, skull, *eyeball, scorpion, skeleton, *ksuzzy
3 (Approach with Caution):
    centipede2, worm, *mold, spider1, imp, mummy, ghost, bombshell, antLion
4 (Avoid. Requires a plan):
    spider2, wight, firewall, wraith, blob
5 (Run. Just run):
    Vampire, Lich, spider3, demon

    frog, golem, jackal, Cube, Fly, Jelly, Reptile,
    
Demons, Frogs, Fire Walls, Lich, Mummy, Scorpion, Turtle, Tarantula, Wight, Wraith

aA + giant ant
bB + beetle, Blob
cC + centipede
dD - Demon
eE + floating eye
fF - frog, Fire
gG + goblin
hH - 
iI + Imp
jJ - 
kK + ksuzzy
lL - Lich
mM - +mold, Mummy
nN - 
oO - 
pP - 
qQ - 
rR + rat
sS - snake, skull, scorpion, skeleton
tT - turtle, Tarantula
uU - 
vV - Vampire
wW - +worm, Wight, Wraith
xX - 
yY - 
zZ - zombie dwarf

+ skeleton, + zombie dwarf, Mummy,
Wight, Wraith,
Vampire, Lich

TO DONE: Alpha7
    Blobs
    BugFix: Included Font
TO DONE: Alpha6
    Make Camp.
    Companion AI. Goblins get and equip equipment items.
    Undead Enemies.
    Balance.
    Optimization.
TO DONE: Alpha5
    Armor, Shields
    kSuzzy
TO DONE: Alpha4
    Remove ascending stairs from first level.
    Enabled Companions.
    Added Moral System.
    Basic Leadership menu.
TO DONE: Alpha3
    Included 'Mousetrap' library for cross platform keyboard control.
    Switched map drawing from html to canvas to improve game speed.
    Enemy Breeding.

Car Guy Video:
    I love seeing another developer dealing with little glitches, but still loving his game.
    The joy of doing doughnuts in a big blue van.
    This guy really loves this car, and you will too! It is the car you've always wanted!
    "This is not fantasy game - this is realism, comrade!

Monica hedadl (High dal)
Anni Defranco
Ask Chris about portfolios (who should I talk to?)
Haunt the House


TODO(Beta):
    Bugs:
        ? Goblin's unhelpful dance.
        (Defered) Enemies move twice on first move.
        (Unconfirmed) Phantom Arrows ("That item is no longer there");
        $ Things are placed in unhelpful positions.
            $ Goblin and enemies spawn in the same room.
            $ Items, goblin, and enemies are spawned on stairs, up and down.
        Enemies get stuck toggling doors.
            
    Absolute Must:
        Larger dungeon rooms as levels go higher.
        Status Bar
        ? Advanced Goblin Moral (Seek out when moral is high)
        ? Look / Examine
        $ More Enemies
        $ More Armor
        Companions:
            ? Heal the leader if possible
            ? Persist in actions (no hard distance boundry preventing planning)
            ? Roles
            * Leadership Menu
                Follow Me!
                * Run!
                * Attack!
                Collect Items
    
    Should:
        $ Goblins equip items the player throws at them.
        Spiders make webs, chase players.
        Roll Character
        Settle Down / Win.
        Win / Score Display.
        More items
            wand
            scrolls
            potions
            About
    
    Later:
        Miasma?
        Goblins get, keep, and use consumable items.
        $ charms, amulets
        '.' to run.
        Saving / Loading
        $ Larger Title Display
        ? Switch Menu system to canvas
        Locked doors, door bashing
        $ Enemies drop items
        * Uncouple client from server
            $ Look into tight coupling in targeting system.
            
    Done:
        + Blobs
        + Goblins don't path through visible traps.
        + Bugfix: Enemies Occupy Stairs.
        + enemies bash through doors
        + Bugfix: Arrows don't stack when fired.
        + Bugfix: Doors can be closed while occupied.
        + Camp
        + Simple Enemy persistence (Go toward hero)
        + Enemies open doors
        + Optimize: Pathfinding
        + Goblins get items (Equipment)
        + Worm Bodies attack
        + Armor, Shields
        + Dispose of old levels as no longer needed.
        + Remove ascending stairs from first level.
        + Close Doors
        + Title Display
        + Status Menu
        + More weapons
        + More items
            + wand
            + scrolls
            + potions
        + Help Menu
        + Fix status / info (so you don't have to move to see status)
        + Bugfix: Old enemies show in memory
        + Game Over / Game Recycling
        + Clicking:
            + To move (Refactor)
            + Links in menu (like BYOND topics)
    
    Now Possible:
        Armor, Shields
        Enemies that attack moral.
        Items that boost or drain moral.
        Enemies that summon.


Description of game:

    + Title Screen
        Continue
        + New Game
        Intro
        About
    
    Intro
        TODO
    
    About
        TODO
    
    Continue
        Game Interface
    
    + New Game
        Watch Introduction?
            Yes
                Roll Character, Enter Name
            No
                Roll Character, Enter Name
    
    Roll Character, Enter Name
        + Game Interface
    
    Game Interface
        + Travel through map.
        + Get items.
        + Find items.
        + Kill Enemies.
        Enemies drop items.
        + Run away and heal.
        Camp
        + Gain Levels.
        * Find companions.
        + Travel deeper.
        Kill hard enemies.
        Game Over.
        Kill a boss.
        Settle Down.
        Win.
        Score Display.






Bugs:
Weirdness (things that may or may not be considered bugs):
Unfinished Features:
    Extentions
    Containables show in memory, but positions update once seen in new places.
TODO:
    Look / Examine
    Leadership Menu

Simple Rogue
    Kill stuff dead, get loot, do it again.

Combat:
    + Attack
        + Melee
f       + Shoot
F       + Throw
m       -S-k-i-l-l-s-
u   +   Items
    + Hurt
    + Die
    + Gain Exp

Interactions:
l   * Examine Shit (Needs recall from memory of important details)
        Examine Self
    + Kill Shit
    Manage Equipment
    Manage Inventory
    --
e/w + Equip Shit
u/t + Unequip Shit
u   + Use Shit
        + Use Shit on Shit
d/d + Drop Shit
g   + Get Shit
+   + Move Self



a - aim wand
b - browse book
B - bash
c - close
C - status
d - drop
D - disarm
e - view equipment
E - eat
f - fire / throw
F - fill lamp
G - learn spell
h - display commands
i - display inventory
j - jam door
l - look
L - Scroll map
m - magic
M - view small map
o - open door
p - pray
q - quaff potion
r - read scroll
R - rest
s - search
t - unequip / take-off
T - tunnel
u - use staff
v - display version
V - view high scores
w - wear / equip
x - swap weapon















Goblin Anthropology
    A Goblin Anthropologist Explores her own past.



Short Term:
    Generate Hallways and Vaults. (?)


Recently Completed:
    Take View and Opacity into consideration.
    Make proper memory structures for contents of tiles (currently hard linked).





Sky Dragon


Earth Dragon

Death
Alone



Edrin looks into past to discover self.
Goblin escapes past, looks into future that's unknown.
Goblin has coming of age arc.

Pretext vs Theme

The beast in the darkness

Dwarf Fortress: You could pick up on enough procedurally generated history to assume your own plot
    and come up with a purpose for your fortress or adventurer, but it isn't necessary for most
    and doesn't change gameplay itself.
    
    
    
John Resig extend code:

  /* Simple JavaScript Inheritance
     * By John Resig http://ejohn.org/
     * MIT Licensed.
     */  
     // Inspired by base2 and Prototype
    (function(){
  var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;

  // The base Class implementation (does nothing)
  this.Class = function(){};

  // Create a new Class that inherits from this class
  Class.extend = function(prop) {
    var _super = this.prototype;

    // Instantiate a base class (but only create the instance,
    // don't run the init constructor)
    initializing = true;
    var prototype = new this();
    initializing = false;

    // Copy the properties over onto the new prototype
    for (var name in prop) {
      // Check if we're overwriting an existing function
      prototype[name] = typeof prop[name] == "function" &&
        typeof _super[name] == "function" && fnTest.test(prop[name]) ?
        (function(name, fn){
          return function() {
            var tmp = this._super;

            // Add a new ._super() method that is the same method
            // but on the super-class
            this._super = _super[name];

            // The method only need to be bound temporarily, so we
            // remove it when we're done executing
            var ret = fn.apply(this, arguments);        
            this._super = tmp;

            return ret;
          };
        })(name, prop[name]) :
        prop[name];
    }

    // The dummy class constructor
    function Class() {
      // All construction is actually done in the init method
      if ( !initializing && this.init )
        this.init.apply(this, arguments);
    }

    // Populate our constructed prototype object
    Class.prototype = prototype;

    // Enforce the constructor to be what we expect
    Class.prototype.constructor = Class;

    // And make this class extendable
    Class.extend = arguments.callee;

    return Class;
  };
})();